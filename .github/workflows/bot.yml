name: Python Telegram bot (@popot_bot)

on:
  push:
  pull_request:
  schedule:
    - cron: "0 2 * * 1-5"

jobs:
  popotBotGitHubActions:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
#        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]
#        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install BOT dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - uses: actions/checkout@v2
      - name: autopep8
        uses: peter-evans/autopep8@v1
        with:
          args: --recursive --in-place --aggressive --aggressive .
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.token }}
          commit-message: autopep8 action fixes
          committer: Peter Evans <peter-evans@users.noreply.github.com>
          title: Fixes by autopep8 action
          body: This is an auto-generated PR with fixes by autopep8.
          labels: autopep8, automated pr
          reviewers: peter-evans
          branch: autopep8-patches
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 .
      - name: Install BOT-test dependencies
        run: |
          pip install -r requirements_test.txt
      - name: Run tests with pytest and generate coverage report
        run: |
          pip install pytest-cov
          pytest --cov=./ --cov-report=xml --html=report.html -n 10 test/test_base.py

      - name: Show project dir files
        run: find . -not \( -path "./.pytest_cache/*" -o -path "./.git/*" -o -path "*/__pycache__/*" -o -path "./.idea/*" \)

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.xml
          flags: unittests
          nema: codecov-popot-bot

      - name: Upload pytest report
        uses: actions/upload-artifact@v1
        with:
          name: report
          path: report.html,./assets
